A resume of the article: *How To Use For Loops Better in Python*, at [medium.com](https://medium.com/better-programming/how-to-use-for-loops-better-in-python-1dfbc3d9e91f)
### 1. items() and values()
>>> scores = {"John": 94, "Mike": 95, "Sandra": 98, "Jennifer": 95}
   
   
>>> for score in scores:  
...     print(score)  
...   
Mike  
John  
Jennifer  
Sandra]


>>> for score in scores.items():
...     print(score)
... 
('Mike', 95)
('John', 94)
('Jennifer', 95)
('Sandra', 98)


>>> for name, score in scores.items():
...     print("Student Name: " + name + ", Score: " + str(score))
... 
Student Name: Mike, Score: 95
Student Name: John, Score: 94
Student Name: Jennifer, Score: 95
Student Name: Sandra, Score: 98


>>> for score in scores.values():
...     print(score)
... 
95
94
95
98


### 2. enumerate()
>>> grades = ["Freshman", "Sophomore", "Junior", "Senior"]


>>> for grade in enumerate(grades):
...     print(grade)
... 
(0, 'Freshman')
(1, 'Sophomore')
(2, 'Junior')
(3, 'Senior')


>>> for year, name in enumerate(grades, start=1):
...     print("Year " + str(year) + ": " + name)
... 
Year 1: Freshman
Year 2: Sophomore
Year 3: Junior
Year 4: Senior


### 3. reversed()
>>> arrived_students = ["John", "Mike", "Sandra", "Jennifer"]


>>> for student in reversed(arrived_students):
...     print(student)
... 
Jennifer
Sandra
Mike
John


### 4. sorted()
>>> students = ["John", "Mike", "Sandra", "Jennifer"]


>>> for student in sorted(students):
...     print(student)
... 
Jennifer
John
Mike
Sandra


>>> students = [{"name": "John", "id": 1}, {"name": "Mike", "id": 4}, {"name": "Sandra", "id": 2}, {"name": "Jennifer", "id": 3}]


>>> for student in sorted(students, key = lambda i: i["id"], reverse=True):
...     print(student)
... 
{'name': 'Mike', 'id': 4}
{'name': 'Jennifer', 'id': 3}
{'name': 'Sandra', 'id': 2}
{'name': 'John', 'id': 1}


### 5. filter()
>>> students = [{"name": "John", "id": 1}, {"name": "Mike", "id": 4}, {"name": "Sandra", "id": 2}, {"name": "Jennifer", "id": 3}]


>>> for student in filter(lambda i: i["id"] % 2 == 0, students):
...     print(student)
... 
{'name': 'Mike', 'id': 4}
{'name': 'Sandra', 'id': 2}


### 6. zip()
names = ["John", "Mike", "Sandra", "Jennifer"]
ids = [1, 3, 2, 4]


>>> for student in zip(names, ids):
...     print(student)
... 
('John', 1)
('Mike', 3)
('Sandra', 2)
('Jennifer', 4)
